{"version":3,"file":"static/js/27.481e35f4.chunk.js","mappings":"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","sources":["static/breakpoints.ts","assets/styles/breakPointUtilities.ts","assets/styles/common.ts","assets/styles/styledUtilities.ts","assets/styles/brand.ts","components/brand.tsx","components/customProgressBar.tsx","components/customProgressBarWithBrand.tsx","components/formGroup.tsx","static/constants.ts","utils/helpers.ts"],"sourcesContent":["export const size = {\r\n    mobileS: '320px',\r\n    mobileM: '375px',\r\n    mobileL: '425px',\r\n    tablet: '768px',\r\n    laptop: '1024px',\r\n    laptopL: '1440px',\r\n    desktop: '2560px'\r\n}\r\n\r\nexport const deviceBreakPoints = {\r\n    mobileS: `(min-width: ${size.mobileS})`,\r\n    mobileM: `(min-width: ${size.mobileM})`,\r\n    mobileL: `(min-width: ${size.mobileL})`,\r\n    tablet: `(min-width: ${size.tablet})`,\r\n    laptop: `(min-width: ${size.laptop})`,\r\n    laptopL: `(min-width: ${size.laptopL})`,\r\n    desktop: `(min-width: ${size.desktop})`,\r\n    desktopL: `(min-width: ${size.desktop})`\r\n};","import styled from \"styled-components\";\r\nimport { deviceBreakPoints, size } from \"../../static/breakpoints\";\r\n\r\nexport const ResponsiveWidth = styled(\"div\")`\r\n    @media ${deviceBreakPoints.tablet} { \r\n        width: 40%;\r\n    }\r\n\r\n    @media (max-width: ${size.mobileL}) {\r\n        max-width: 100%;\r\n    }\r\n`;\r\n\r\nexport const ResponsiveWidthWrapper = styled(ResponsiveWidth)`\r\n    @media (max-width: ${size.mobileL}) { \r\n        margin-top: 50px !important;\r\n        margin-bottom: 50px !important;\r\n    }\r\n\r\n    @media  ${deviceBreakPoints.mobileL} and (max-width:${size.tablet}) { \r\n        margin-top: 50px !important;\r\n        margin-bottom: 50px !important;\r\n    }\r\n\r\n    @media ${deviceBreakPoints.tablet} { \r\n        margin-top: 75px !important;\r\n        margin-bottom: 75px !important;\r\n    }\r\n`;","import { Button } from \"react-bootstrap\";\r\nimport styled from \"styled-components\";\r\n\r\nexport const StyledButton = styled(Button)`\r\n  background: ${(p) => p.color || p.theme.lightMode.primaryColor};\r\n  color: ${(p) => (p.color ? \"#fff\" : \"#fff\")};\r\n  font-size: 1rem;\r\n  font-weight: 700;\r\n  width:${(p) => p.width ? p.width : \"100%\"};\r\n  border: 1px solid #edf3f5;\r\n  border-radius: 1.25em;\r\n  padding: 13px 20px;\r\n  cursor: pointer;\r\n  margin-top: ${(p) => (p.marginTop ? p.marginTop : \"0.625rem\")};\r\n  transition: all 0.3s ease-in-out;\r\n\r\n  &:hover,\r\n  &:active,\r\n  &:focus {\r\n    color: #fff;\r\n    border: 1px solid ${props => props.theme.lightMode.secondaryColor};\r\n    background-color: ${props => props.theme.lightMode.secondaryColor};\r\n  }\r\n`;\r\n\r\nexport const OutlinedButton = styled(Button)`\r\n  background: #fff;\r\n  color: ${(p) => (p.color ?? p.theme.lightMode.primaryColor)};\r\n  font-size: 1rem;\r\n  font-weight: 700;\r\n  width:${(p) => p.width ? p.width : \"100%\"};\r\n  border: 2px solid ${(p) => (p.color ?? p.theme.lightMode.primaryColor)};\r\n  border-radius: 1.25em;\r\n  padding: 13px 20px;\r\n  cursor: pointer;\r\n  margin-top: ${(p) => (p.marginTop ? p.marginTop : \"0.625rem\")};\r\n  transition: all 0.3s ease-in-out;\r\n\r\n  &:hover,\r\n  &:active,\r\n  &:focus {\r\n    color: #fff;\r\n    border: 1px solid ${props => props.theme.lightMode.secondaryColor};\r\n    background-color: ${props => props.theme.lightMode.secondaryColor};\r\n  }\r\n`;\r\n\r\nexport const FormTitle = styled(\"h6\")`\r\n  color: ${props => props.theme.lightMode.secondaryColor};\r\n  font-weight: 700;\r\n  font-size: 1rem;\r\n`;","import { Link } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\n\r\nexport const StyledLink = styled(Link)`\r\ntext-decoration:none;\r\ncolor: ${props => props.theme.lightMode.secondaryColor} !important;\r\nfont-weight: 900\r\n`","import styled from \"styled-components\";\r\n\r\nexport const LogoContainer = styled(\"div\")`\r\n  display: flex;\r\n  position: relative;\r\n\r\n  .brand-span{\r\n      font-weight: 900;\r\n      font-size: 32px\r\n  }\r\n`;","import { LogoContainer } from \"../assets/styles/brand\";\r\n\r\nexport default function Brand() {\r\n    return (\r\n        <>\r\n            <LogoContainer aria-label=\"homepage\" className=\"d-none d-lg-block\">\r\n                <span className=\"brand-span text-primary\">èrèconomy</span>\r\n            </LogoContainer>\r\n            <LogoContainer aria-label=\"homepage\" className=\"d-block d-lg-none\">\r\n                <span className=\"brand-span text-primary\">ère</span>\r\n            </LogoContainer>\r\n        </>\r\n    );\r\n}\r\n","import { ProgressBar } from \"react-bootstrap\";\r\nimport { ProgressBarProps } from \"../types/classes\";\r\n\r\n\r\nconst CustomProgressBar = ({ id, now = 50, children }: ProgressBarProps) => {\r\n    return (\r\n        <div className=\"w-100\">\r\n            {children}\r\n            <div className=\"w-50\">\r\n                <ProgressBar id={id} now={now} />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CustomProgressBar;","import { ProgressBar } from \"react-bootstrap\";\r\nimport { FormTitle } from \"../assets/styles/common\";\r\nimport { ProgressBarProps } from \"../types/classes\";\r\nimport Brand from \"./brand\";\r\nimport CustomProgressBar from \"./customProgressBar\";\r\n\r\nconst defaultClassName = \"d-flex justify-content-between align-items-center my-3 \";\r\nconst CustomProgressBarWithBrand = ({ id, now = 50, title, className = \"\" }: ProgressBarProps) => {\r\n    return (\r\n        <div className={className ? defaultClassName.concat(className) : defaultClassName}>\r\n            <CustomProgressBar className={className} id={id} now={now}>\r\n                <FormTitle>{title}</FormTitle>\r\n            </CustomProgressBar>\r\n            <div className=\"w-100 d-flex justify-content-end\">\r\n                <Brand />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CustomProgressBarWithBrand;","import React from \"react\";\r\nimport ReactTooltip from \"react-tooltip\";\r\nimport { hasKeys, isNullOrUndefined } from \"../utils/helpers\";\r\nfunction FormGroup({\r\n    input_type, on_change, elRef, input_name, place_holder, input_id, input_key, error, is_readonly, input_value, label_value = \"\", div_classname, style, label_style = {}, clickable_label = {}, input_class_name = \"\", has_addon = {},\r\n}: any) {\r\n    let inputGroupArr: any = [\"text\", \"email\", \"number\", \"phone\"];\r\n    let inputGroupDate: any = [\"date\"];\r\n    let inputGroupRange: any = [\"range\"];\r\n\r\n    let inputClassName = input_class_name.length > 0\r\n        ? input_class_name.concat(\" form-control\")\r\n        : error\r\n            ? \"form-control\"\r\n            : \"form-control\";\r\n\r\n    const defineInputType = (type: any) => {\r\n        let inputType: string;\r\n        switch (type) {\r\n            case \"text\":\r\n                inputType = \"text\";\r\n                break;\r\n            case \"email\":\r\n                inputType = \"email\";\r\n                break;\r\n            case \"password\":\r\n                inputType = \"password\";\r\n                break;\r\n            case \"number\":\r\n                inputType = \"number\";\r\n                break;\r\n            case \"phone\":\r\n                inputType = \"phone\";\r\n                break;\r\n            case \"checkbox\":\r\n                inputType = \"checkbox\";\r\n                break;\r\n            case \"select\":\r\n                inputType = \"select\";\r\n                break;\r\n            case \"radio\":\r\n                inputType = \"radio\";\r\n                break;\r\n            case \"date\":\r\n                inputType = \"date\";\r\n                break;\r\n            case \"time\":\r\n                inputType = \"time\";\r\n                break;\r\n            case \"range\":\r\n                inputType = \"range\";\r\n                break;\r\n            default:\r\n                inputType = \"text\";\r\n                break;\r\n        }\r\n\r\n        return inputType;\r\n    };\r\n\r\n    let inputItem = inputGroupArr.indexOf(defineInputType(input_type)) > -1 ? (\r\n        on_change ? (\r\n            <input\r\n                type={defineInputType(input_type)}\r\n                placeholder={place_holder}\r\n                key={input_key}\r\n                id={input_id}\r\n                name={input_name}\r\n                className={inputClassName}\r\n                onChange={on_change ? on_change : null}\r\n                value={input_type === \"number\"\r\n                    ? input_value <= 0\r\n                        ? \"\"\r\n                        : input_value\r\n                    : input_value}\r\n                ref={elRef}\r\n                readOnly={is_readonly ? is_readonly : false}\r\n                style={style}\r\n            ></input>\r\n        ) : (\r\n            <input\r\n                type={defineInputType(input_type)}\r\n                key={input_key}\r\n                id={input_id}\r\n                name={input_name}\r\n                className={inputClassName}\r\n                defaultValue={input_value}\r\n                ref={elRef}\r\n                readOnly={is_readonly ? is_readonly : false}\r\n                style={style} />\r\n        )\r\n    ) : inputGroupDate.indexOf(defineInputType(input_type)) > -1 ? (\r\n        <input\r\n            type={defineInputType(input_type)}\r\n            key={input_key}\r\n            id={input_id}\r\n            name={input_name}\r\n            className={inputClassName}\r\n            ref={elRef}\r\n            onChange={on_change ? on_change : null}\r\n            readOnly={is_readonly}\r\n            style={style}\r\n            value={input_value} />\r\n    )\r\n        // : inputGroupTime.indexOf(defineInputType(input_type)) > -1 ? (\r\n        // <TimePicker\r\n        //     className=\"w-100 form-control timepicker-style\"\r\n        //     defaultValue={moment(\"12:08\", format)}\r\n        //     format={format}\r\n        //     onChange={(time: any, timeString: any) => on_change(moment().milliseconds(time).valueOf(), timeString)} />\r\n        // ) \r\n        : inputGroupRange.indexOf(defineInputType(input_type)) > -1 ? (\r\n            <input\r\n                type={defineInputType(input_type)}\r\n                key={input_key}\r\n                id={input_id}\r\n                name={input_name}\r\n                className={inputClassName}\r\n                ref={elRef}\r\n                onChange={on_change ? on_change : null}\r\n                readOnly={is_readonly}\r\n                style={style} />\r\n        ) : defineInputType(input_type) === \"password\" ? (\r\n            on_change ? (\r\n                <input\r\n                    type={defineInputType(input_type)}\r\n                    key={input_key}\r\n                    id={input_id}\r\n                    name={input_name}\r\n                    className={inputClassName}\r\n                    onChange={on_change ? on_change : null}\r\n                    value={input_value}\r\n                    ref={elRef}\r\n                    readOnly={is_readonly ? is_readonly : false}\r\n                    style={style} />\r\n            ) : (\r\n                <input\r\n                    type={defineInputType(input_type)}\r\n                    key={input_key}\r\n                    id={input_id}\r\n                    name={input_name}\r\n                    className={inputClassName}\r\n                    onChange={on_change ? on_change : null}\r\n                    value={input_value}\r\n                    ref={elRef}\r\n                    defaultValue={\"\"}\r\n                    readOnly={is_readonly ? is_readonly : false}\r\n                    style={style} />\r\n            )\r\n        ) : (\r\n            <input\r\n                type={defineInputType(input_type)}\r\n                key={input_key}\r\n                id={input_id}\r\n                name={input_name}\r\n                className={inputClassName}\r\n                onChange={on_change ? on_change : null}\r\n                value={input_value}\r\n                defaultValue={\"\"}\r\n                ref={elRef}\r\n                placeholder={place_holder}\r\n                readOnly={is_readonly ? is_readonly : false}\r\n                style={style} />\r\n        );\r\n\r\n    return (\r\n        <>\r\n            <div className={div_classname ?? \"form-group\"}>\r\n                <div className=\"d-flex justify-content-between\">\r\n                    {hasKeys(clickable_label) ? (\r\n                        <label\r\n                            htmlFor={input_type}\r\n                            style={Object.assign(label_style, { width: \"100%\" })}\r\n                            dangerouslySetInnerHTML={{\r\n                                __html: \"<div class='d-flex justify-content-between'>\".concat(\r\n                                    \"<div>\",\r\n                                    clickable_label.label_value?.concat(\r\n                                        \"</div>\",\r\n                                        !isNullOrUndefined(error) && error?.hasError\r\n                                            ? \"<div class='is-required' style=''>(required)</div>\"\r\n                                            : \"\",\r\n                                        \"</span><span class='info-icon'></span>\"\r\n                                    ) ?? \"\",\r\n                                    \"</div>\"\r\n                                ),\r\n                            }}\r\n                            data-tip={clickable_label.label_info}\r\n                        ></label>\r\n                    ) : (\r\n                        <label\r\n                            htmlFor={input_type}\r\n                            style={Object.assign(label_style, { width: \"100%\" })}\r\n                            dangerouslySetInnerHTML={{\r\n                                __html: \"<div class='d-flex justify-content-between'>\".concat(\r\n                                    \"<div>\",\r\n                                    label_value?.concat(\r\n                                        \"</div>\",\r\n                                        (!isNullOrUndefined(error) && error?.hasError) ||\r\n                                            (input_type === \"number\" && input_value < 0)\r\n                                            ? \"<span class='is-required'>(required)</span>\"\r\n                                            : \"\"\r\n                                    ),\r\n                                    \"</div>\"\r\n                                ),\r\n                            }}\r\n                        ></label>\r\n                    )}\r\n                </div>\r\n                {<React.Fragment>\r\n                    <>\r\n                        {hasKeys(has_addon) ? (\r\n                            <div className=\"input-group mb-3\">\r\n                                <span className=\"input-group-text\" id=\"basic-addon1\">\r\n                                    {has_addon.icon ?? \"@\"}\r\n                                </span>\r\n\r\n                                {inputItem}\r\n                            </div>\r\n                        ) : (\r\n                            inputItem\r\n                        )}\r\n                    </>\r\n                </React.Fragment>}\r\n            </div>\r\n            <ReactTooltip className={\"bg-primary\"} />\r\n        </>\r\n    );\r\n}\r\nexport default FormGroup;\r\n","export const responseCodes = {\r\n    NO_RECORD_FOUND: \"25\",\r\n    INACTIVE_USER: \"06\",\r\n    FAILED: \"01\",\r\n    SUCCESSFUL: \"00\",\r\n    BAD_REQUEST: \"400\",\r\n    UNAUTHORIZED: \"401\",\r\n    INVALID_GRANT: \"INVALID_GRANT\",\r\n    SERVICE_UNAVAILABLE: \"503\",\r\n    CHANGE_PASSWORD: \"CHANGE_PASSWORD\",\r\n    ERROR_OCCURRED: \"ERROR OCCURRED\",\r\n    ACCESS_DENIED: \"ACCESS DENIED\",\r\n    PAGE_NOT_FOUND: \"404\",\r\n};\r\nexport const responseMessages = {\r\n    ACCESS_DENIED: \"You do not have access to this resource\",\r\n    BAD_REQUEST: \"There is something wrong with this request\",\r\n    INVALID_GRANT: \"There is something wrong with your credentials\",\r\n    REQUEST_COULD_NOT_BEEN_AUTHENTICATED: \"Auth token expired or not available\",\r\n    SERVICE_UNAVAILABLE: \"Service unavailable\",\r\n};","import { responseCodes } from \"../static/constants\";\r\n\r\n\r\nexport const isNumeric = (num: any) => (typeof (num) === 'number' ||\r\n  (typeof (num) === \"string\" && num.trim() !== '')) && !isNaN(num as number);\r\n\r\nexport const isObject = (item: any) => {\r\n  return typeof item === \"object\" && !Array.isArray(item) && item !== null;\r\n};\r\n\r\nexport const getFieldFromObj = (field: string, ob: any) => {\r\n  if (Object.keys(ob).filter(x => x === field).length === 1) {\r\n    return ob[field];\r\n  };\r\n\r\n  return \"\";\r\n}\r\n\r\nexport const rgbToRgba = (color: string, opacity=0.75)=>{\r\n  return color.replace(/rgb/i, \"rgba\").replace(/\\)/i,\",\"+opacity+\")\");\r\n}\r\n\r\nexport const skipObject = (arrOfVals: any, objVal: any) => {\r\n  let newObj: any = {};\r\n  if (arrOfVals.length === 0) {\r\n    for (const [keys, values] of Object.entries(objVal)) {\r\n      newObj = Object.assign({}, newObj, {\r\n        [keys]: values,\r\n      });\r\n    }\r\n    return newObj;\r\n  } else {\r\n    for (const [keys, values] of Object.entries(objVal)) {\r\n      if (!arrOfVals.includes(keys)) {\r\n        newObj = Object.assign({}, newObj, {\r\n          [keys]: values,\r\n        });\r\n      }\r\n    }\r\n    return newObj;\r\n  }\r\n};\r\n\r\nexport const cherryPickObject = (arrOfVals: any, objVal: any) => {\r\n  let newObj: any = {};\r\n  for (const [keys, values] of Object.entries(objVal)) {\r\n    if (arrOfVals.includes(keys)) {\r\n      newObj = Object.assign({}, newObj, {\r\n        [keys]: values,\r\n      });\r\n    }\r\n  }\r\n  return newObj;\r\n};\r\n\r\nexport const hasKeys = (objVal: any): boolean => {\r\n  return !isNullOrUndefined(objVal) && Object.entries(objVal).length > 0;\r\n};\r\n\r\nexport const hasValues = (objVal: any, valueToCheck?: any[]): boolean => {\r\n  let check = false;\r\n  if (isNullOrUndefined(valueToCheck)) {\r\n    check = !isNullOrUndefined(objVal) && Object.values(objVal).length > 0;\r\n  } else {\r\n    if (!isNullOrUndefined(objVal)) {\r\n      check =\r\n        Object.values(objVal).filter((val) => valueToCheck?.includes(val))\r\n          .length > 0;\r\n    }\r\n  }\r\n  return check;\r\n};\r\n\r\nexport const isKeyPresent = (objVal: any, requiredKey: string) => {\r\n  return !isNullOrUndefined(objVal) && objVal[requiredKey];\r\n};\r\n\r\nexport const createUUID = (prefix: string) => {\r\n  return (\r\n    prefix +\r\n    (new Date().getTime().toString(16) +\r\n      Math.floor(1e7 * Math.random()).toString(16))\r\n  );\r\n};\r\n\r\nexport const checkValueOrElseUseDefinedVal = (\r\n  val: any,\r\n  definedString: string\r\n) => {\r\n  return val !== null && val !== undefined ? val : definedString;\r\n};\r\n\r\nexport const isEmptyString = (val: any) => {\r\n  return val === null || val === undefined || val.length === 0;\r\n};\r\n\r\nexport const isANumber = (val: any) => {\r\n  return val !== null && val !== undefined && !Number.isNaN(val);\r\n};\r\n\r\nexport const valueIsLessThan = (val: any, operand: number) => {\r\n  return isANumber(val) && val < operand;\r\n};\r\n\r\nexport const valueIsGreaterThan = (val: any, operand: number) => {\r\n  return isANumber(val) && val > operand;\r\n};\r\n\r\nexport const isEmptyArray = (val: any) => {\r\n  return val === null || val === undefined || val.length === 0;\r\n};\r\n\r\nexport const isNullOrUndefined = (val: any) => {\r\n  return val === null || val === undefined;\r\n};\r\n\r\nexport const trueOrFalse = (val: any) => {\r\n  return checkValueOrElseUseDefinedVal(val, \"\") !== \"\" &&\r\n    val !== null &&\r\n    val?.toString().toLowerCase() === \"true\"\r\n    ? true\r\n    : val.toString().toLowerCase() === \"false\"\r\n      ? false\r\n      : val;\r\n};\r\n\r\nexport const isYesOrNo = (val: any) => {\r\n  return checkValueOrElseUseDefinedVal(val, \"\") !== \"\" &&\r\n    trueOrFalse(val) === false\r\n    ? \"No\"\r\n    : trueOrFalse(val) === true\r\n      ? \"Yes\"\r\n      : val;\r\n};\r\n\r\nexport const parseResponse = (val: any, fallbackRes: string) => {\r\n  if (checkValueOrElseUseDefinedVal(val, \"\") !== \"\") {\r\n    let resMessage = checkValueOrElseUseDefinedVal(\r\n      val?.actionResponse?.message,\r\n      fallbackRes\r\n    );\r\n\r\n    return resMessage;\r\n  } else {\r\n    return fallbackRes;\r\n  }\r\n};\r\n\r\nexport const isSuccessful = (val: any) => {\r\n  return (\r\n    (val !== null && val !== undefined && val === \"00\") ||\r\n    val === true ||\r\n    String(val).toLowerCase() === \"successful\"\r\n  );\r\n};\r\nexport const isDeclined = (val: any) => {\r\n  return (\r\n    (val !== null && val !== undefined && val === \"05\") ||\r\n    val === true ||\r\n    String(val).toLowerCase() === \"successful\"\r\n  );\r\n};\r\nexport const isNotFound = (val: any) => {\r\n  return (\r\n    val !== null && val !== undefined && val === responseCodes.NO_RECORD_FOUND\r\n  );\r\n};\r\nexport const splitString = (val: string, regexp: string) => {\r\n  let res = \"\";\r\n  if (!isEmptyString(val)) {\r\n    res = val.split(regexp).join(\" \");\r\n  }\r\n  return res;\r\n};\r\nexport const splitObject = (val: any) => {\r\n  let res = \"\";\r\n  for (const [, value] of Object.entries(val)) {\r\n    res += String(value).concat(\"<br/>\");\r\n  }\r\n  return res;\r\n};\r\n\r\nexport const camelCaseToSentenceCase = (val: string) => {\r\n  let res = \"\";\r\n  try {\r\n    if (!isEmptyString(val)) {\r\n      res = val.replace(/([a-zA-Z])(?=[A-Z])/g, \"$1 \");\r\n    }\r\n  } catch (error) {\r\n    console.log(\"ERROR OCCURRED WHILE PARSING:::\", error);\r\n  }\r\n\r\n  return capitaliseFirstLetter(res);\r\n};\r\n\r\nexport const upperCaseCharAt = (val: string, loc: number) => {\r\n  let res = val;\r\n  if (!isEmptyString(val)) {\r\n    res = val.length > 0 ? val.charAt(loc).toUpperCase() : val;\r\n  }\r\n  return res;\r\n};\r\nexport const capitaliseFirstLetter = (val: string) => {\r\n  let res = val;\r\n  if (!isEmptyString(val)) {\r\n    res = val.length > 0 ? val.charAt(0).toUpperCase() + val.slice(1) : val;\r\n  }\r\n  return res;\r\n};\r\n\r\nexport const makeTitleCase = (stringInContext: string) => {\r\n  let titleSentence = stringInContext.toLowerCase().split(\" \");\r\n  for (let i = 0; i < titleSentence.length; i++) {\r\n    titleSentence[i] =\r\n      titleSentence[i][0].toUpperCase() + titleSentence[i].slice(1) + \" \";\r\n  }\r\n  return titleSentence;\r\n};\r\n\r\nexport const makeSentenceCase = (val: string) => {\r\n  let res = val;\r\n  if (!isEmptyString(val)) {\r\n    res = val.length > 0 ? val.charAt(0).toUpperCase() + val.slice(1) : val;\r\n  }\r\n  return res;\r\n};\r\n\r\nexport const getSessionId = () => {\r\n  return /SESS\\w*ID=([^;]+)/i.test(document.cookie) ? RegExp.$1 : false;\r\n};\r\n\r\nexport const useGoBack = () => { };\r\n\r\nexport const wait = (ms: any) =>\r\n  new Promise((resolve) => setTimeout(resolve, ms));\r\n\r\nexport const grouper = (key: any) => (array: any[]) =>\r\n  array.reduce((objectsByKeyValue, obj) => {\r\n    const value = obj[key];\r\n    objectsByKeyValue[value] = (objectsByKeyValue[value] || []).concat(obj);\r\n    return objectsByKeyValue;\r\n  }, {});\r\n\r\nexport const groupByHelper = grouper(\"parentMenuName\");\r\nexport const stringStripper = ({\r\n  stringInContext,\r\n  replacer,\r\n  replacee,\r\n}: any) => {\r\n  let stringAfterReplacement = \"\";\r\n  try {\r\n    stringAfterReplacement = stringInContext.replaceAll(\r\n      replacee ?? \"\",\r\n      replacer === \"\" ? \"\" : replacer\r\n    );\r\n  } catch (error) {\r\n    stringAfterReplacement = stringInContext;\r\n  }\r\n  return stringAfterReplacement;\r\n};\r\n\r\n// export const toDateFormat = (\r\n//   date: any,\r\n//   dateFormat?: string,\r\n//   shouldPad?: boolean\r\n// ) => {\r\n//   let d = isNullOrUndefined(date) ? new Date() : new Date(date);\r\n//   let dtString = \"\";\r\n//   switch (dateFormat) {\r\n//     case \"yyyy-MM-dd\":\r\n//       dtString = format(new Date(), dateFormat);\r\n//       break;\r\n//     default:\r\n//       dtString = String(d.getDate()).concat(\r\n//         String(d.getMonth() + 1),\r\n//         String(d.getFullYear())\r\n//       );\r\n//       break;\r\n//   }\r\n\r\n//   return dtString;\r\n// };\r\n\r\nexport const generateRandomNumber = (max: number = 10) => {\r\n  return Math.floor(Math.random() * max) + 1;\r\n};\r\n\r\nexport const generateNumericString = (length: number) => {\r\n  let chars = \"0123456789\";\r\n  let randomNumericString = \"\";\r\n  for (let i = 0; i < length; i++) {\r\n    let rnum = Math.floor(Math.random() * chars.length);\r\n    randomNumericString += chars.substring(rnum, rnum + 1);\r\n  }\r\n  return randomNumericString;\r\n};\r\n\r\n// export const getValueFromUserDetail = (valueToGet: any) => {\r\n//   let valueToReturn;\r\n//   let userDetails = encryptStorage.getItem(\"basicUserDetails\");\r\n//   switch (valueToGet) {\r\n//     case \"username\":\r\n//       let username = !isNullOrUndefined(userDetails)\r\n//         ? userDetails?.username\r\n//         : \"\";\r\n//       valueToReturn = username;\r\n//       break;\r\n//     case \"firstName\":\r\n//       let firstName = !isNullOrUndefined(userDetails)\r\n//         ? userDetails?.firstName\r\n//         : \"\";\r\n//       valueToReturn = firstName;\r\n//       break;\r\n//     case \"tokenEnabled\":\r\n//       let tokenEnabled = !isNullOrUndefined(userDetails)\r\n//         ? userDetails?.tokenEnabled\r\n//         : \"\";\r\n//       valueToReturn = tokenEnabled;\r\n//       break;\r\n//     case \"isLoggedIn\":\r\n//       valueToReturn = !isNullOrUndefined(encryptStorage.getItem(\"isLoggedIn\"))\r\n//         ? encryptStorage.getItem(\"isLoggedIn\")\r\n//         : \"false\";\r\n//       break;\r\n//     case \"userRole\":\r\n//       let userRole = !isNullOrUndefined(userDetails)\r\n//         ? userDetails?.role_id\r\n//         : \"\";\r\n//       valueToReturn = userRole;\r\n//       break;\r\n//     case \"corporateId\":\r\n//       let corporateId = !isNullOrUndefined(userDetails)\r\n//         ? userDetails?.corporateId\r\n//         : \"\";\r\n//       valueToReturn = corporateId;\r\n//       break;\r\n//     case \"companyName\":\r\n//       let companyName = !isNullOrUndefined(userDetails)\r\n//         ? userDetails?.corporateDetails?.name\r\n//         : \"\";\r\n//       valueToReturn = companyName;\r\n//       break;\r\n\r\n//     default:\r\n//       valueToReturn = \"\";\r\n//       break;\r\n//   }\r\n//   return valueToReturn;\r\n// };\r\nexport const useTimer = (initTime: number) => {\r\n  var duration = initTime;\r\n\r\n  var start = Date.now(),\r\n    diff,\r\n    minutes,\r\n    seconds;\r\n\r\n  function timer() {\r\n    diff = duration - (((Date.now() - start) / 1000) | 0);\r\n\r\n    minutes = (diff / 60) | 0;\r\n    seconds = diff % 60 | 0;\r\n\r\n    minutes = minutes < 10 ? \"0\" + minutes : minutes;\r\n\r\n    seconds = seconds < 10 ? \"0\" + seconds : seconds;\r\n\r\n    if (diff <= 0) {\r\n      start = Date.now() + 1000;\r\n\r\n      clearInterval(myCountdown);\r\n    }\r\n  }\r\n\r\n  timer();\r\n\r\n  var myCountdown = setInterval(timer, 1000);\r\n  return { diff };\r\n};\r\n\r\nexport const buildDateRangeString = (data: any) => {\r\n  return data.startDate.concat(\r\n    \"/\",\r\n    data?.endDate,\r\n    \"/\",\r\n    data?.requestTypeId === \"APPROVED\" ? 1 : 0\r\n  );\r\n};\r\n\r\nexport const sanitizeUrl = (data: string) => {\r\n  return data.startsWith(\"/\") ? data.substr(1) : data;\r\n};\r\n\r\nexport const getToday = () => {\r\n  let myDate = new Date();\r\n  let year: any = String(myDate.getFullYear());\r\n  let month: any =\r\n    myDate.getMonth() < 10 ? \"0\" + myDate.getMonth() : myDate.getMonth();\r\n  let day: any = myDate.getDay() < 10 ? \"0\" + myDate.getDay() : myDate.getDay();\r\n\r\n  let finalDate = String(month + day + year);\r\n  return finalDate;\r\n};\r\n\r\nexport const stringSplitter = (splitBy: string, stringToSplit: string) => {\r\n  try {\r\n    let splittedString = stringToSplit.trim().split(splitBy);\r\n    let splittedStringArr = splittedString.join(\" \");\r\n\r\n    return splittedStringArr;\r\n  } catch (error) {\r\n    return stringToSplit;\r\n  }\r\n};\r\n"],"names":["size","deviceBreakPoints","mobileS","mobileM","mobileL","tablet","laptop","laptopL","desktop","desktopL","ResponsiveWidth","styled","ResponsiveWidthWrapper","StyledButton","Button","p","color","theme","lightMode","primaryColor","width","marginTop","props","secondaryColor","OutlinedButton","FormTitle","StyledLink","Link","LogoContainer","Brand","className","id","now","children","ProgressBar","defaultClassName","title","concat","input_type","on_change","elRef","input_name","place_holder","input_id","input_key","error","is_readonly","input_value","label_value","div_classname","style","label_style","clickable_label","input_class_name","has_addon","inputClassName","length","defineInputType","type","inputType","inputItem","indexOf","placeholder","name","onChange","value","ref","readOnly","defaultValue","hasKeys","htmlFor","Object","assign","dangerouslySetInnerHTML","__html","isNullOrUndefined","hasError","label_info","icon","responseCodes","NO_RECORD_FOUND","INACTIVE_USER","FAILED","SUCCESSFUL","BAD_REQUEST","UNAUTHORIZED","INVALID_GRANT","SERVICE_UNAVAILABLE","CHANGE_PASSWORD","ERROR_OCCURRED","ACCESS_DENIED","PAGE_NOT_FOUND","responseMessages","REQUEST_COULD_NOT_BEEN_AUTHENTICATED","key","isNumeric","num","trim","isNaN","isObject","item","Array","isArray","rgbToRgba","opacity","replace","objVal","entries","isEmptyString","val","undefined","isSuccessful","String","toLowerCase","camelCaseToSentenceCase","res","console","log","capitaliseFirstLetter","charAt","toUpperCase","slice"],"sourceRoot":""}
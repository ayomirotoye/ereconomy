{"version":3,"file":"static/js/85.fdf5b5c6.chunk.js","mappings":"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","sources":["assets/icons/TargetSavingIcon.tsx","assets/styles/appCard.ts","assets/styles/contentBlock.ts","assets/styles/htmlElements.tsx","assets/icons/CloseIcon.tsx","containers/closeableContainer.tsx","services/httpService.ts","services/errorHandlerService.ts","utils/apiCallEndpoints.ts","services/authService.ts","state/atoms/modalState/index.ts","utils/formUtils.ts","components/modals/loginModal.tsx","components/modals/registerModal.tsx","assets/styles/header.ts","state/atoms/authState/userLogin.ts","assets/icons/LoginIcon.tsx","components/header.tsx","containers/pageWrapper.tsx","assets/icons/UserIcon.tsx","utils/appNavigationLinks.js"],"sourcesContent":["\r\nexport function TargetSavingIcon({ height = \"512\", width = \"512\", className = \"icons-svg\", fill = \"\", strokeWidth = \"10\" }: any) {\r\n    return (\r\n        <svg\r\n            id=\"target-saving-icon\"\r\n            enableBackground=\"new 0 0 512 512\"\r\n            height={height}\r\n            viewBox={`0 0 ${height} ${width}`}\r\n            width={width}\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n            className={className}\r\n        >\r\n            <g>\r\n                <path\r\n                    fill={fill}\r\n                    strokeWidth={strokeWidth}\r\n                    d=\"m163.922,31.916c-33.472,0-64.08,12.478-87.433,33.018l-2.065-2.089v-27.843c0-2.214-0.856-4.342-2.388-5.94l-25.348-26.422c-2.423-2.526-6.141-3.326-9.392-2.021-3.25,1.307-5.379,4.458-5.379,7.961v22.8h-22.8c-3.438,0-6.544,2.052-7.893,5.215-1.347,3.162-0.678,6.824 1.701,9.305l25.349,26.422c1.619,1.687 3.854,2.64 6.191,2.64h27.828l2.086,2.084c-20.53,23.35-33,53.95-33,87.413-3.55271e-15,73.083 59.459,132.541 132.543,132.541 73.083,0 132.542-59.458 132.542-132.543s-59.459-132.541-132.542-132.541zm-106.657,25.885h-19.141l-8.885-9.262h11.258c4.738,0 8.58-3.841 8.58-8.58v-10.042l8.188,8.535v19.349zm106.657,222.039c-63.622,0-115.383-51.761-115.383-115.383 0-28.734 10.56-55.047 28-75.266l12.955,12.942c-14.157,16.879-22.696,38.622-22.696,62.324 0,53.555 43.569,97.125 97.124,97.125s97.124-43.57 97.124-97.125-43.569-97.124-97.124-97.124c-23.782,0-45.59,8.597-62.493,22.839l-12.865-13.019c20.232-17.487 46.581-28.078 75.358-28.078 63.622,0 115.382,51.76 115.382,115.382s-51.76,115.383-115.382,115.383zm-49.23-152.535c-7.825,10.343-12.477,23.213-12.477,37.153 0,34.026 27.681,61.707 61.707,61.707 34.025,0 61.706-27.681 61.706-61.707 0-34.025-27.681-61.706-61.706-61.706-14.089,0-27.081,4.756-37.48,12.733l-12.907-13.062c13.763-11.2 31.301-17.93 50.387-17.93 44.093,0 79.965,35.872 79.965,79.965s-35.872,79.966-79.965,79.966-79.965-35.873-79.965-79.966c0-18.973 6.654-36.413 17.735-50.139l13,12.986zm25.623,25.597c-1.716,3.49-2.683,7.411-2.683,11.556 0,14.496 11.793,26.289 26.289,26.289 14.495,0 26.289-11.793 26.289-26.289 0-14.495-11.793-26.289-26.289-26.289-4.372,0-8.494,1.079-12.125,2.974l-13.169-13.326c7.191-4.979 15.905-7.906 25.294-7.906 24.563,0 44.546,19.984 44.546,44.546 0,24.563-19.984,44.547-44.546,44.547-24.563,0-44.547-19.984-44.547-44.547 0-9.205 2.807-17.766 7.609-24.874l13.332,13.319zm23.607,2.427c5.034,0 9.129,4.095 9.129,9.129s-4.095,9.13-9.129,9.13c-5.034,0-9.13-4.096-9.13-9.13s4.096-9.129 9.13-9.129z\" /></g>\r\n        </svg>\r\n    );\r\n}\r\n","import { Card } from \"react-bootstrap\";\r\nimport styled from \"styled-components\";\r\n\r\n\r\nexport const StyledCard = styled(Card)`\r\nmargin: 0 auto;\r\nmargin-bottom: 0px;\r\nborder-radius: 20px;\r\npadding: 30px 10px 30px 30px;\r\n`;\r\n\r\nexport const InfoCardTitle = styled(Card.Title)`\r\nfont-size: 20px;\r\nline-height: 25.18px;\r\nmargin-top: 25px !important;\r\nmax-width: 250px;\r\nfont-weight: 700;\r\n`\r\n\r\nexport const InfoCardText = styled.p`\r\nmargin: 18px 0 40px !important;\r\nline-height: 27.2px;\r\nfont-size: 12.5px;\r\nmax-width: 250px;\r\nmin-height: 200px;\r\n`\r\n\r\nexport const InfoCardImage = styled.div`\r\nmax-height: 100px !important;\r\n`\r\nexport const CardWithStyledBackground = styled(Card)`\r\nmargin: 0 auto;\r\nmargin-bottom: 0px;\r\nborder-radius: 20px;\r\nbackground-color: ${props => props.color};\r\nheight:200px !important;\r\n`;","import styled from \"styled-components\";\r\n\r\nexport const RightBlockContainer = styled(\"section\")`\r\n  position: relative;\r\n  padding: 4rem 0 8rem;\r\n\r\n  @media only screen and (max-width: 1024px) {\r\n    padding: 4rem 0 8rem;\r\n  }\r\n\r\n  @media only screen and (max-width: 768px) {\r\n    padding: 2rem 0 4rem;\r\n  }\r\n`;\r\n\r\nexport const Content = styled(\"p\")`\r\n  margin: 1.5rem 0 2rem 0;\r\n`;\r\n\r\nexport const LeftAlignedH6 = styled(\"h6\")`\r\n  text-align: left;\r\n  font-size: 56px;\r\n  line-height: 1.18;\r\n`;\r\n\r\nexport const ContentWrapper = styled(\"div\")`\r\n  position: relative;\r\n  max-width: 540px;\r\n\r\n  @media only screen and (max-width: 575px) {\r\n    padding-bottom: 4rem;\r\n  }\r\n`;\r\n\r\nexport const MainContentContainer = styled.div`\r\n width: \"80vw\" !important;\r\n`;\r\n\r\nexport const DashboardWrapper= styled.div`\r\nwidth: \"100vw\";\r\nbackground-color: ${(p) => (p.color ?? p.theme.lightMode.primaryColor)} !important;\r\n`;\r\n\r\nexport const ButtonWrapper = styled(\"div\")`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  max-width: 100%;\r\n\r\n  @media screen and (min-width: 1024px) {\r\n    max-width: 80%;\r\n  }\r\n\r\n  button:last-child {\r\n    margin-left: 20px;\r\n  }\r\n`;\r\n","import styled from \"styled-components\";\r\nimport { rgbToRgba } from \"../../utils/helpers\";\r\n\r\nexport const StyledP = styled.p`\r\ndisplay: inline-block;\r\npadding: 6px 22px;\r\nborder-radius: 40px;\r\ncolor:${(props => props.theme.lightMode.accentColor)};\r\nbackground-color: ${(props => rgbToRgba(props.theme.lightMode.secondaryColor, 0.2))};\r\nmargin-bottom: 30px;\r\n`\r\n\r\nexport const StyledH2 = styled.h2`\r\nfont-size: 51px;\r\nline-height: 65.1px;\r\nfont-weight: 900;\r\nmargin: 15px 0\r\n`\r\n\r\nexport const DynamicP = styled.p.attrs((props: any) => ({\r\n    fontWeight: props.fontWeight,\r\n    fontSize: props.fontSize\r\n}))`\r\ndisplay: inline-block;\r\nfont-weight:${props => props.fontWeight};\r\nfont-size:${props => props.fontSize}\r\n`\r\n\r\nexport const StyledSvgIconWithBg= styled.div.attrs((props: any) => ({\r\n    color: props?.color ? (props.color) : rgbToRgba(props.theme.lightMode.secondaryColor, 0.1),\r\n}))`\r\nbackground-color: ${props=>props.color};\r\nborder-radius: 25px ;\r\nwidth: 50px;\r\nheight: 50px;\r\npadding: 12px 12px;\r\nvertical-align: middle;\r\nmargin: 8px;\r\nvertical-align: center;\r\nz-index:1000;\r\n`","\r\nexport function CloseIcon({ height = \"512\", width = \"512\", className = \"icons-svg\", strokeWidth = \"10\", stroke = \"white\", fill = \"white\" }: any) {\r\n    return (\r\n        <svg\r\n            id=\"close-icon\"\r\n            enableBackground=\"new 0 0 0 0\"\r\n            height={height}\r\n            width={width}\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n            className={className}\r\n            style={{\r\n                cursor:\"pointer\"\r\n            }}\r\n        >\r\n            <path d=\"M6.22566 4.81096C5.83514 4.42044 5.20197 4.42044 4.81145 4.81096C4.42092 5.20148 4.42092 5.83465 4.81145 6.22517L10.5862 11.9999L4.81151 17.7746C4.42098 18.1651 4.42098 18.7983 4.81151 19.1888C5.20203 19.5793 5.8352 19.5793 6.22572 19.1888L12.0004 13.4141L17.7751 19.1888C18.1656 19.5793 18.7988 19.5793 19.1893 19.1888C19.5798 18.7983 19.5798 18.1651 19.1893 17.7746L13.4146 11.9999L19.1893 6.22517C19.5799 5.83465 19.5799 5.20148 19.1893 4.81096C18.7988 4.42044 18.1657 4.42044 17.7751 4.81096L12.0004 10.5857L6.22566 4.81096Z\" fill=\"black\" />\r\n        </svg>\r\n    );\r\n}\r\n","import { CloseIcon } from \"../assets/icons/CloseIcon\";\r\n\r\nconst CloseableContainer = ({ children, close }: any) => {\r\n    return (\r\n        <>\r\n            <div className=\"d-flex justify-content-end mx-5\" onClick={close}>\r\n                <CloseIcon />\r\n            </div>\r\n            {children}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default CloseableContainer;\r\n","import axios from \"axios\";\r\n\r\naxios.defaults.headers.post[\"Content-Type\"] = \"application/json\";\r\naxios.defaults.timeout = 120000;\r\naxios.interceptors.request.use((request) => {\r\n  return request;\r\n});\r\n\r\nfunction setJwt(jwt: string | null) {\r\n  axios.defaults.headers.common[\"Authorization\"] = `Bearer ${jwt}`;\r\n}\r\n\r\nfunction getJwt(): string | null {\r\n  // const tokenVal: string = axios.defaults.headers.common[\"Authorization\"];\r\n\r\n  // if (!isNullOrUndefined(tokenVal)) {\r\n  //   let tokenValSplit = tokenVal.split(\" \");\r\n  //   if (tokenValSplit.length > 1 && tokenValSplit[1].length > 0) {\r\n  //     return tokenVal;\r\n  //   } else {\r\n  //     return null;\r\n  //   }\r\n  // } else {\r\n  //   return null;\r\n  // }\r\n  return null;\r\n}\r\n\r\nconst httpService = {\r\n  get: axios.get,\r\n  post: axios.post,\r\n  put: axios.put,\r\n  delete: axios.delete,\r\n  setJwt,\r\n  getJwt,\r\n};\r\n\r\nexport default httpService;\r\n","import { responseCodes, responseMessages } from \"../static/constants\";\r\nimport { ResponseBody } from \"../types/classes\";\r\nimport { isNullOrUndefined, isObject } from \"../utils/helpers\";\r\n\r\nexport const handleMyErrors = (err: any) => {\r\n  let finalErrRes: ResponseBody = {\r\n    responseCode: \"\",\r\n    data: {},\r\n    hasError: true,\r\n  };\r\n  try {\r\n    const errRes = err.response?.data;\r\n    if (\r\n      !isNullOrUndefined(errRes) &&\r\n      errRes.error_description?.toString().includes(\"change default/initial\")\r\n    ) {\r\n      finalErrRes = {\r\n        ...finalErrRes,\r\n        responseCode: responseCodes.CHANGE_PASSWORD,\r\n      };\r\n    } else if (\r\n      !isNullOrUndefined(errRes) &&\r\n      errRes.error?.toString().includes(\"access_denied\")\r\n    ) {\r\n      finalErrRes = {\r\n        ...finalErrRes,\r\n        responseCode: responseCodes.ACCESS_DENIED,\r\n        data: responseMessages.ACCESS_DENIED,\r\n      };\r\n      throw new Error(String(finalErrRes));\r\n    }else if (\r\n      !isNullOrUndefined(errRes) &&\r\n      errRes.error?.toString().includes(\"invalid_grant\")\r\n    ) {\r\n      finalErrRes = {\r\n        ...finalErrRes,\r\n        responseCode: responseCodes.INVALID_GRANT,\r\n        data: responseMessages.INVALID_GRANT,\r\n      };\r\n      throw new Error(String(finalErrRes));\r\n    } \r\n    else if (err.message?.includes(\"401\")) {\r\n      finalErrRes = {\r\n        ...finalErrRes,\r\n        responseCode: responseCodes.UNAUTHORIZED,\r\n      };\r\n      // throw new Error(responseMessages.REQUEST_COULD_NOT_BEEN_AUTHENTICATED);\r\n    } else if (err.message?.includes(\"404\")) {\r\n      finalErrRes = {\r\n        ...finalErrRes,\r\n        responseCode: responseCodes.PAGE_NOT_FOUND,\r\n        data: \"No response from requested service as it is not found\",\r\n      };\r\n    } else if (!isNullOrUndefined(err?.response) && isObject(err?.response)) {\r\n      let errResData = err.response.data || {};\r\n      let errResDataString = \"\";\r\n      for (const [keys, values] of Object.entries(errResData)) {\r\n        errResDataString += keys !== \"responseCode\" ? values + \"<br/>\" : \"\";\r\n      }\r\n      if (errResDataString.includes(\"service unavailable\")) {\r\n        finalErrRes = {\r\n          ...finalErrRes,\r\n          responseCode: responseCodes.SERVICE_UNAVAILABLE,\r\n          data: responseMessages.SERVICE_UNAVAILABLE,\r\n        };\r\n      } else\r\n        finalErrRes = {\r\n          ...finalErrRes,\r\n          responseCode: responseCodes.BAD_REQUEST,\r\n          data:\r\n            isNullOrUndefined(errResDataString) ||\r\n            errResDataString?.toLowerCase().includes(\"bad request\")\r\n              ? responseMessages.BAD_REQUEST\r\n              : errResDataString,\r\n        };\r\n    } else {\r\n      finalErrRes = {\r\n        ...finalErrRes,\r\n        responseCode: responseCodes.ERROR_OCCURRED,\r\n        data: err.message,\r\n      };\r\n    }\r\n  } catch (err) {\r\n    finalErrRes = {\r\n      ...finalErrRes,\r\n      responseCode: responseCodes.ERROR_OCCURRED,\r\n    };\r\n    console.log(\"ERROR OCCURRED WHILE PARSING ERRORS=>\", err);\r\n  }\r\n  return finalErrRes;\r\n};\r\n","export const endpoints={\r\n    loginEndpoint: \"/\"\r\n}","import httpService from \"./httpService\";\r\nimport { handleMyErrors } from \"./errorHandlerService\";\r\nimport { LoginRequest } from \"../types/classes\";\r\nimport { responseCodes } from \"../static/constants\";\r\nimport { endpoints } from \"../utils/apiCallEndpoints\";\r\n\r\nexport const callUserLoginApi = async (_data: LoginRequest) => {\r\n  let reqResponse = null;\r\n  try {\r\n    const options = {\r\n      headers: {\r\n        \"content-type\": \"application/json;charset=utf-8\",\r\n      },\r\n    };\r\n    const url = endpoints.loginEndpoint;\r\n    const { status, data } = await httpService.post(url, _data, options);\r\n    if (status === 200 && data) {\r\n      if (data.responseCode === responseCodes.SUCCESSFUL) {\r\n        const jwtToken = data.data?.access_token;\r\n        httpService.setJwt(jwtToken);\r\n        reqResponse = data.data?.user;\r\n      } else {\r\n        reqResponse = {\r\n          responseCode: data.responseCode,\r\n        };\r\n      }\r\n    }\r\n  } catch (err) {\r\n    httpService.setJwt(\"\");\r\n    console.log(\r\n      \"ERROR OCCURRED WHILE CONNECTING TO THE API AUTH SERVER:::\",\r\n      err\r\n    );\r\n    reqResponse = handleMyErrors(err);\r\n  }\r\n  return reqResponse;\r\n};\r\n","import { atom } from \"recoil\";\r\n\r\nexport const atomLoginModalState = atom({\r\n    key: 'LoginModalState',\r\n    default: {\r\n        isOpen: false\r\n    },\r\n});","import {\r\n  camelCaseToSentenceCase,\r\n  hasKeys,\r\n  hasValues,\r\n  isEmptyString,\r\n} from \"../utils/helpers\";\r\nlet isRequiredValidationFields: string | string[] = [];\r\n// let isMinLengthFields: any = {};\r\n// let isDependentFields: any = [];\r\n// let isConfirmPasswordFields: any = [];\r\n// let isDependentFieldsValue: any = {};\r\n// let isFixedLengthFields: any = {};\r\n// let isArrayValidationFields: any = [];\r\n// let isNumberValidationFields: any = [];\r\n// let isEmailFields: any = [];\r\n// let isTINFields: any = [];\r\n// let isAccountNumberFields: any = [];\r\n// let isMinValueFields: any = [];\r\n// let isBVNFields: any = [];\r\n// let isAmountFields: any = [];\r\nlet errors = {};\r\n\r\nexport const validateLoginInput = (data: any): any => {\r\n  errors = {};\r\n  isRequiredValidationFields = [\"corporateCode\", \"username\"];\r\n  try {\r\n    for (const [key, value] of Object.entries(data)) {\r\n      if (isRequiredValidationFields.includes(key)) {\r\n        if (isEmptyString(value)) {\r\n          errors = Object.assign(errors, {\r\n            [key]: camelCaseToSentenceCase(key).concat(\" can not be empty\"),\r\n          });\r\n        }\r\n      }\r\n    }\r\n  } catch (err) {\r\n    console.log(\"ERROR WHILE VALIDATING INPUT:::\");\r\n  }\r\n  return errors;\r\n};\r\n\r\nexport const validateSenderDetailsInput = (data: any): any => {\r\n  errors = {};\r\n\r\n  isRequiredValidationFields = [\r\n    \"senderLocation\",\r\n    \"senderEmail\",\r\n    \"senderPhoneNumber\",\r\n    \"receiverLocation\",\r\n    \"receiverEmail\",\r\n    \"receiverPhoneNumber\",\r\n  ];\r\n  try {\r\n    if (isRequiredValidationFields.length > 0) {\r\n      if (\r\n        !hasKeys(data) ||\r\n        Object.entries(data).length !== isRequiredValidationFields.length\r\n      ) {\r\n        return isRequiredValidationFields.reduce(\r\n          (o, key) => ({ ...o, [key]: \"Field is required\" }),\r\n          {}\r\n        );\r\n      } else if (hasValues(data, [\"\", undefined, null])) {\r\n        return isRequiredValidationFields.reduce(\r\n          (o, key) => ({ ...o, [key]: \"Field is required and must not be empty\" }),\r\n          {}\r\n        );\r\n      }\r\n    }\r\n    for (const [key, value] of Object.entries(data)) {\r\n      if (isRequiredValidationFields.includes(key)) {\r\n        if (isEmptyString(value)) {\r\n          errors = Object.assign(errors, {\r\n            [key]: camelCaseToSentenceCase(key).concat(\" can not be empty\"),\r\n          });\r\n        }\r\n      }\r\n    }\r\n  } catch (err) {\r\n    console.log(\"ERROR WHILE VALIDATING INPUT:::\");\r\n  }\r\n  return errors;\r\n};\r\n","import { useEffect, useState } from \"react\";\r\nimport { Modal } from \"react-bootstrap\";\r\nimport { useNavigate } from \"react-router\";\r\nimport { toast } from \"react-toastify\";\r\nimport { useRecoilState } from \"recoil\";\r\nimport { ResponsiveWidthWrapper } from \"../../assets/styles/breakPointUtilities\";\r\nimport { StyledButton } from \"../../assets/styles/common\";\r\nimport { Content } from \"../../assets/styles/contentBlock\";\r\nimport { StyledLink } from \"../../assets/styles/styledUtilities\";\r\nimport CloseableContainer from \"../../containers/closeableContainer\";\r\nimport { callUserLoginApi } from \"../../services/authService\";\r\nimport { atomLoginModalState } from \"../../state/atoms/modalState\";\r\nimport { responseCodes } from \"../../static/constants\";\r\nimport { appNavigationLinks } from \"../../utils/appNavigationLinks\";\r\nimport { validateLoginInput } from \"../../utils/formUtils\";\r\nimport { isSuccessful } from \"../../utils/helpers\";\r\nimport CustomProgressBarWithBrand from \"../customProgressBarWithBrand\";\r\nimport FormGroup from \"../formGroup\";\r\n\r\nconst LoginModal = () => {\r\n  const [loginModalState, setLoginModalState] = useRecoilState(atomLoginModalState);\r\n  const [isSubmitting, setIsSubmitting] = useState(true);\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const [values, setValues] = useState(Object.assign({}));\r\n\r\n  const closeAuthModal = () => {\r\n    setLoginModalState({ isOpen: false });\r\n  };\r\n\r\n  const [myErrors, setMyErrors] = useState(Object.assign({}));\r\n\r\n  const handleLogin = async () => {\r\n    setIsSubmitting(true);\r\n    try {\r\n      let res = await callUserLoginApi(values);\r\n      if (isSuccessful(res?.responseCode)) {\r\n        toast(\"Wow so easy !\");\r\n      } else if (res?.responseCode === responseCodes.INACTIVE_USER) {\r\n        navigate(appNavigationLinks.dashboard);\r\n      }\r\n      else {\r\n        toast(\"Failed\");\r\n        closeAuthModal();\r\n        navigate(appNavigationLinks.dashboard);\r\n      }\r\n    } catch (err) {\r\n    } finally {\r\n      setIsSubmitting(false);\r\n    }\r\n  };\r\n\r\n  const handleInputChange = (e: any) => {\r\n    setValues({ ...values, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  useEffect(() => {\r\n    validateInput();\r\n  }, [values]);\r\n\r\n  function validateInput() {\r\n    let validationRes = validateLoginInput({\r\n      email: values?.email,\r\n      password: values?.password,\r\n    });\r\n\r\n    if (Object.keys(validationRes).length > 0) {\r\n      setMyErrors(validationRes);\r\n    } else {\r\n      setMyErrors({});\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }\r\n\r\n  return (\r\n    <Modal\r\n      centered\r\n      keyboard={true}\r\n      show={loginModalState.isOpen}\r\n      onHide={closeAuthModal}\r\n      fullscreen={true}\r\n    >\r\n      <CloseableContainer close={closeAuthModal}>\r\n        <ResponsiveWidthWrapper className=\"mx-auto\">\r\n          <CustomProgressBarWithBrand className=\"px-3\" now={100} title=\"Login\" />\r\n          <Modal.Body>\r\n            <div>\r\n              <form>\r\n                <div className=\"row\">\r\n                  <div className=\"col-sm-12 col-md-12 mb-5\">\r\n                    <FormGroup\r\n                      input_name=\"email\"\r\n                      label_value=\"Email\"\r\n                      input_type=\"email\"\r\n                      input_id=\"email\"\r\n                      is_readonly={false}\r\n                      on_change={handleInputChange}\r\n                      input_value={values?.email ?? \"\"}\r\n                      error={{\r\n                        hasError: myErrors.email,\r\n                        message: myErrors.email,\r\n                      }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                  <div className=\"col-sm-12 col-md-12\">\r\n                    <FormGroup\r\n                      input_name=\"password\"\r\n                      label_value=\"Password\"\r\n                      input_type=\"password\"\r\n                      input_id=\"password\"\r\n                      is_readonly={false}\r\n                      on_change={handleInputChange}\r\n                      input_value={values?.password ?? \"\"}\r\n                      error={{\r\n                        hasError: myErrors.password,\r\n                        message: myErrors.password,\r\n                      }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </form>\r\n              <div className=\"d-flex justify-content-between align-items-center\">\r\n                <div className=\"\">\r\n                  <StyledLink to=\"/register\">New here ? Register</StyledLink>\r\n                </div>\r\n                <StyledButton\r\n                  width=\"50%\"\r\n                  onClick={handleLogin}\r\n                >\r\n                  Login\r\n                </StyledButton>\r\n              </div>\r\n              <div className=\"d-flex justify-content-center align-items-center\">\r\n                <Content>Forgot password ?</Content>\r\n              </div>\r\n            </div>\r\n          </Modal.Body>\r\n        </ResponsiveWidthWrapper>\r\n      </CloseableContainer>\r\n    </Modal>\r\n  );\r\n};\r\nexport default LoginModal;\r\n","import  { useState } from \"react\";\r\n\r\ntype RequiredMark = boolean | \"optional\";\r\n\r\nconst RegisterModal = function () {\r\n  // const [form] = Form.useForm();\r\n  const [requiredMark, setRequiredMarkType] = useState<RequiredMark>(\"optional\");\r\n\r\n  const closeAuthModal = () => {\r\n  };\r\n\r\n  const onRequiredTypeChange = ({\r\n    requiredMarkValue,\r\n  }: {\r\n    requiredMarkValue: RequiredMark;\r\n  }) => {\r\n    setRequiredMarkType(requiredMarkValue);\r\n  };\r\n\r\n  const handleAuth = async () => { };\r\n\r\n  return (\r\n    <></>\r\n    // <Modal\r\n    //   centered\r\n    //   title={header_value ?? \"Register\"}\r\n    //   visible={false}\r\n    //   onCancel={closeAuthModal}\r\n    //   destroyOnClose={true}\r\n    //   confirmLoading={false}\r\n    //   footer={[\r\n    //     <Button\r\n    //       className=\"btn-primary\"\r\n    //       key=\"Register\"\r\n    //       onClick={handleAuth}\r\n    //       icon={<UserIcon iconClass=\"secondary\" className=\"icons-svg\" />}\r\n    //     >\r\n    //       Register\r\n    //     </Button>,\r\n    //   ]}\r\n    // >\r\n    //   <div>\r\n    //     <Form\r\n    //       form={form}\r\n    //       layout=\"vertical\"\r\n    //       initialValues={{ requiredMarkValue: requiredMark }}\r\n    //       onValuesChange={onRequiredTypeChange}\r\n    //       requiredMark={requiredMark}\r\n    //       size={\"small\"}\r\n    //     >\r\n    //       <Form.Item label=\"Email\" requiredMark={true}>\r\n    //         <Input type=\"email\" />\r\n    //       </Form.Item>\r\n    //       <div className=\"d-flex row justify-content-between\">\r\n    //         <div className=\"col\">\r\n    //           <Form.Item label=\"Firstname\" requiredMark={true}>\r\n    //             <Input type=\"text\" />\r\n    //           </Form.Item>\r\n    //         </div>\r\n    //         <div className=\"col\">\r\n    //           <Form.Item label=\"Lastname\" requiredMark={true}>\r\n    //             <Input type=\"text\" />\r\n    //           </Form.Item>\r\n    //         </div>\r\n    //       </div>\r\n    //       <div className=\"d-flex row justify-content-between\">\r\n    //         <div className=\"col\">\r\n    //           <Form.Item label=\"Password\" requiredMark={true}>\r\n    //             <Input type=\"password\" />\r\n    //           </Form.Item>\r\n    //         </div>\r\n    //         <div className=\"col\">\r\n    //           <Form.Item label=\"Confirm password\" requiredMark={true}>\r\n    //             <Input type=\"password\" />\r\n    //           </Form.Item>\r\n    //         </div>\r\n    //       </div>\r\n    //     </Form>\r\n    //     <div className=\"d-flex justify-content-center align-items-center\">\r\n    //       <Button\r\n    //         type=\"link\"\r\n    //         onClick={(e: any) => {\r\n    //         }}\r\n    //       >\r\n    //         <p className=\"m-0\">\r\n    //           Have an account? <b>login</b>\r\n    //         </p>\r\n    //       </Button>\r\n    //     </div>\r\n    //   </div>\r\n    // </Modal>\r\n  );\r\n};\r\nexport default RegisterModal;\r\n","import { Nav } from \"react-bootstrap\";\r\nimport styled from \"styled-components\";\r\n\r\nexport const HeaderSection = styled(\"header\")`\r\n  padding: 1rem 0.5rem;\r\n\r\n  .ant-row-space-between {\r\n    align-items: center;\r\n    text-align: center;\r\n  }\r\n`;\r\n\r\nexport const NavLink = styled(\"div\")`\r\n  display: inline-block;\r\n  text-align: center;\r\n`;\r\n\r\nexport const CustomNavLinkSmall = styled(Nav.Link)`\r\n  font-size: 1.2rem;\r\n  color: ${(props=> props.theme.lightMode.secondaryColor)};\r\n  transition: color 0.2s ease-in;\r\n  margin: 0.5rem 2rem;\r\n\r\n  @media only screen and (max-width: 768px) {\r\n    margin: 1.25rem 2rem;\r\n  }\r\n`;\r\n\r\nexport const CustomNavLink = styled(\"div\")`\r\n  width: 203px;\r\n  display: inline-block;\r\n\r\n  @media only screen and (max-width: 411px) {\r\n    width: 150px;\r\n  }\r\n\r\n  @media only screen and (max-width: 320px) {\r\n    width: 118px;\r\n  }\r\n`;\r\n\r\nexport const Span = styled(\"span\")`\r\n  cursor: pointer;\r\n  transition: all 0.3s ease-in-out;\r\n  color: ${props=>props.color}\r\n\r\n  // &:hover,\r\n  // &:active,\r\n  // &:focus {\r\n  //   color: ${(props=> props.theme.lightMode.secondaryColor)};\r\n  //   text-underline-position: under;\r\n  //   text-decoration: ${(props=> props.theme.lightMode.secondaryColor)} underline;\r\n  // }\r\n`;","import { atom } from \"recoil\";\r\n\r\nexport const atomLoginState = atom({\r\n    key: 'LoginState',\r\n    default: {\r\n        username: \"\",\r\n        \"password\": \"\",\r\n        isLoggedIn:false\r\n    },\r\n});","export const LoginIcon = ({\r\n  className=\"icons-svg\",\r\n  strokeWidth = \"10\",\r\n  stroke = \"white\",\r\n  fill = \"white\",\r\n}: any) => {\r\n  return (\r\n    <svg\r\n      id=\"login-icon\"\r\n      enableBackground=\"new 0 0 512 512\"\r\n      height=\"512\"\r\n      viewBox=\"0 0 512 512\"\r\n      width=\"512\"\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      className={className}\r\n    >\r\n      <g>\r\n        <path\r\n          fill={fill}\r\n          stroke={stroke}\r\n          strokeWidth={strokeWidth}\r\n          d=\"m392 512h-121c-66.168 0-120-53.832-120-120v-21c0-11.046 8.954-20 20-20s20 8.954 20 20v21c0 44.112 35.888 80 80 80h121c44.112 0 80-35.888 80-80v-272c0-44.112-35.888-80-80-80h-121c-44.112 0-80 35.888-80 80v20c0 11.046-8.954 20-20 20s-20-8.954-20-20v-20c0-66.168 53.832-120 120-120h121c66.168 0 120 53.832 120 120v272c0 66.168-53.832 120-120 120z\"\r\n        />\r\n        <path d=\"m257 352c-5.128 0-10.254-1.959-14.161-5.876-7.8-7.821-7.783-20.484.038-28.285l46.289-46.166c3.764-3.751 5.834-8.731 5.834-14.025 0-5.273-2.055-10.236-5.788-13.98l-46.226-45.399c-7.88-7.74-7.995-20.402-.255-28.283s20.402-7.995 28.283-.255l46.289 45.461c.036.035.071.07.106.105 11.344 11.309 17.59 26.35 17.59 42.351s-6.247 31.041-17.59 42.35l-46.287 46.164c-3.902 3.892-9.013 5.838-14.122 5.838zm-1-96c0-11.046-8.954-20-20-20h-216c-11.046 0-20 8.954-20 20s8.954 20 20 20h216c11.046 0 20-8.954 20-20z\" />\r\n      </g>\r\n    </svg>\r\n  );\r\n};\r\n","import { Container, Nav, Navbar, Offcanvas } from \"react-bootstrap\";\r\nimport Brand from \"../components/brand\";\r\nimport LoginModal from \"../components/modals/loginModal\";\r\nimport RegisterModal from \"../components/modals/registerModal\";\r\nimport {\r\n    CustomNavLinkSmall,\r\n} from \"../assets/styles/header\";\r\nimport { atomLoginState } from \"../state/atoms/authState/userLogin\";\r\nimport { useRecoilState, useRecoilValue } from \"recoil\";\r\nimport { atomLoginModalState } from \"../state/atoms/modalState\";\r\nimport { StyledButton } from \"../assets/styles/common\";\r\nimport { LoginIcon } from \"../assets/icons/LoginIcon\";\r\n\r\nconst Header = ({ isVisible = true }: any) => {\r\n    const MenuItem = () => {\r\n        const loginState = useRecoilValue(atomLoginState);\r\n        const [loginModalState, setLoginModalState] = useRecoilState(atomLoginModalState);\r\n        const checkIfUserIsLoggedIn = () => {\r\n            if (!loginState.isLoggedIn) {\r\n                console.log(\"User:::\", loginState)\r\n                setLoginModalState({ isOpen: true });\r\n            } else {\r\n                //CLOSE MODAL\r\n            }\r\n        };\r\n\r\n        return (\r\n            <>\r\n                <Nav className=\"mx-auto\">\r\n                    <LoginModal />\r\n                    <RegisterModal />\r\n                    <CustomNavLinkSmall href=\"/about\">About us</CustomNavLinkSmall>\r\n                    <CustomNavLinkSmall href=\"/contact\">Contact</CustomNavLinkSmall>\r\n                    <CustomNavLinkSmall href=\"/contact\">Team</CustomNavLinkSmall>\r\n                </Nav>\r\n                <Nav>\r\n                    <StyledButton onClick={checkIfUserIsLoggedIn}> <LoginIcon />Start</StyledButton>\r\n                </Nav>\r\n            </>\r\n        );\r\n    };\r\n\r\n    return (\r\n        <>\r\n            {isVisible ?\r\n                <Navbar bg=\"white\" expand={\"sm\"} fixed=\"top\">\r\n                    <Container>\r\n                        <Navbar.Brand href=\"#\"><Brand /></Navbar.Brand>\r\n                        <Navbar.Toggle aria-controls=\"appNavbar\" />\r\n                        <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n                            <MenuItem />\r\n                        </Navbar.Collapse>\r\n                        <Navbar.Offcanvas\r\n                            id=\"appNavbar\"\r\n                            aria-labelledby=\"appNavbarLabel\"\r\n                            placement=\"end\"\r\n                        >\r\n                            <Offcanvas.Header closeButton>\r\n                                <Offcanvas.Title id=\"appNavbarLabel\"><Brand /></Offcanvas.Title>\r\n                            </Offcanvas.Header>\r\n                            <Offcanvas.Body>\r\n                                <MenuItem />\r\n                            </Offcanvas.Body>\r\n                        </Navbar.Offcanvas>\r\n                    </Container>\r\n                </Navbar>\r\n                : []\r\n            }\r\n        </>\r\n    );\r\n};\r\n\r\nexport default (Header);\r\n","import Header from \"../components/header\";\r\n\r\ntype pageWrapperProps = {\r\n    isHeaderVisible?: boolean;\r\n    children: any\r\n}\r\nconst PageWrapper = ({ isHeaderVisible = true, children }: pageWrapperProps) => {\r\n    return (\r\n        <>\r\n            <Header isVisible={isHeaderVisible} />\r\n            {children}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default PageWrapper;","import { useTheme } from \"styled-components\";\r\n\r\nexport const UserIcon = ({\r\n  className,\r\n  strokeWidth = \"10\",\r\n  fill,\r\n  iconClass = \"\",\r\n}: any) => {\r\n  const theme = useTheme();\r\n  let iconFill = iconClass === \"primary\" ? Object.assign(theme).lightMode?.primaryColor : fill;\r\n  let iconStroke = iconFill;\r\n  return (\r\n    <svg\r\n      id=\"user-icon\"\r\n      enableBackground=\"new 0 0 512 512\"\r\n      height=\"512\"\r\n      viewBox=\"0 0 512 512\"\r\n      width=\"512\"\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      className={className}\r\n    >\r\n      <path\r\n        fill={iconFill}\r\n        stroke={iconStroke}\r\n        strokeWidth={strokeWidth}\r\n        d=\"M318.136,458.514H49.709v-84.505c0.06-41.159,33.404-74.503,74.563-74.563h97.727h4.971\r\n\tc81.642,0.338,148.112-65.566,148.45-147.217c0.338-81.652-65.566-148.102-147.217-148.45S80.101,69.354,79.753,150.996\r\n\tc-0.149,36.377,13.113,71.531,37.262,98.741C51.25,253.635-0.06,308.135,0,374.009v109.359c0,13.73,11.125,24.854,24.854,24.854\r\n\th293.282c13.73,0,24.854-11.125,24.854-24.854S331.866,458.514,318.136,458.514z M226.97,54.879\r\n\tc53.845,1.541,96.246,46.428,94.705,100.272c-1.442,50.604-41.378,91.693-91.921,94.586h-7.755\r\n\tc-53.755-3.38-94.596-49.699-91.216-103.454C133.985,95.332,175.929,55.476,226.97,54.879z\"\r\n      />\r\n      <g>\r\n        <path\r\n          fill={iconFill}\r\n          stroke={iconStroke}\r\n          strokeWidth={strokeWidth}\r\n          d=\"M487.146,398.864H338.019c-13.73,0-24.854-11.125-24.854-24.854s11.125-24.854,24.854-24.854\r\n\t\th149.126c13.73,0,24.854,11.125,24.854,24.854S500.875,398.864,487.146,398.864z\"\r\n        />\r\n        <path\r\n          fill={iconFill}\r\n          stroke={iconStroke}\r\n          strokeWidth={strokeWidth}\r\n          d=\"M412.583,473.427c-13.73,0-24.854-11.125-24.854-24.854V299.446\r\n\t\tc0-13.73,11.125-24.854,24.854-24.854s24.854,11.125,24.854,24.854v149.126C437.437,462.302,426.312,473.427,412.583,473.427z\"\r\n        />\r\n      </g>\r\n      <g></g>\r\n      <g></g>\r\n      <g></g>\r\n      <g></g>\r\n      <g></g>\r\n      <g></g>\r\n      <g></g>\r\n      <g></g>\r\n      <g></g>\r\n      <g></g>\r\n      <g></g>\r\n      <g></g>\r\n      <g></g>\r\n      <g></g>\r\n      <g></g>\r\n    </svg>\r\n  );\r\n};\r\n","import { TargetSavingIcon } from \"../assets/icons/TargetSavingIcon\"\r\nimport { UserIcon } from \"../assets/icons/UserIcon\"\r\n\r\nexport const appNavigationLinks = {\r\n    home: [\"/home\", \"/\"],\r\n    features: \"/features\",\r\n    makeOrder: \"/order/create\",\r\n    dashboard: \"/dashboard\"\r\n}\r\n\r\nexport const dashboardLinks = [\r\n    {\r\n        title: \"Home\",\r\n        route: \"/home\",\r\n        active: false,\r\n        icon: <UserIcon className=\"icons-svg d-flex justify-content-center\" fill=\"white\" />\r\n    }, {\r\n        title: \"Savings\",\r\n        route: \"/savings\",\r\n        active: false,\r\n        icon: <TargetSavingIcon className=\"icons-svg\" fill=\"white\" height=\"300\" width=\"300\" />\r\n    }, {\r\n        title: \"Investments\",\r\n        route: \"/investments\",\r\n        active: false,\r\n        icon: <UserIcon className=\"icons-svg\" fill=\"white\" />\r\n    }, {\r\n        title: \"Earnings\",\r\n        route: \"/earnings\",\r\n        active: false,\r\n        icon: <UserIcon className=\"icons-svg\" fill=\"white\" />\r\n    }, {\r\n        title: \"Account\",\r\n        route: \"/account\",\r\n        active: false,\r\n        icon: <UserIcon className=\"icons-svg\" fill=\"white\" />\r\n    },\r\n]"],"names":["TargetSavingIcon","height","width","className","fill","strokeWidth","id","enableBackground","viewBox","xmlns","d","StyledCard","styled","Card","InfoCardTitle","InfoCardText","InfoCardImage","CardWithStyledBackground","props","color","Content","LeftAlignedH6","DashboardWrapper","p","theme","lightMode","primaryColor","StyledP","accentColor","rgbToRgba","secondaryColor","StyledH2","DynamicP","fontWeight","fontSize","StyledSvgIconWithBg","CloseIcon","stroke","style","cursor","children","close","onClick","axios","request","get","post","put","delete","setJwt","jwt","getJwt","handleMyErrors","err","finalErrRes","responseCode","data","hasError","errRes","response","isNullOrUndefined","error_description","toString","includes","responseCodes","error","responseMessages","Error","String","message","isObject","errResData","errResDataString","Object","entries","keys","values","toLowerCase","console","log","endpoints","callUserLoginApi","_data","reqResponse","options","headers","url","httpService","status","jwtToken","access_token","user","atomLoginModalState","atom","key","default","isOpen","isRequiredValidationFields","errors","useRecoilState","loginModalState","setLoginModalState","useState","setIsSubmitting","navigate","useNavigate","assign","setValues","closeAuthModal","myErrors","setMyErrors","handleLogin","res","isSuccessful","toast","appNavigationLinks","handleInputChange","e","target","name","value","useEffect","validationRes","isEmptyString","camelCaseToSentenceCase","concat","validateLoginInput","email","password","length","validateInput","Modal","centered","keyboard","show","onHide","fullscreen","now","title","input_name","label_value","input_type","input_id","is_readonly","on_change","input_value","to","CustomNavLinkSmall","Nav","atomLoginState","username","isLoggedIn","LoginIcon","isVisible","MenuItem","loginState","useRecoilValue","href","Navbar","bg","expand","fixed","Container","placement","Offcanvas","closeButton","isHeaderVisible","UserIcon","iconClass","useTheme","iconFill","iconStroke","home","features","makeOrder","dashboard","dashboardLinks","route","active","icon"],"sourceRoot":""}